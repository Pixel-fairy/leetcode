##Question
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

Example 1:
Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]

Example 2:
Input: nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3
Output: 10
Explanation: [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]


## my solution
class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        start = 0
        max_ones = 0
        end = 0
        while end < len(nums):
            if nums[end] == 0:
                k -= 1
                
            while k < 0:
                if nums[start] == 0:
                    k += 1
                start += 1
                
            max_ones = max(max_ones, end - start + 1)
            end += 1
        return max_ones
