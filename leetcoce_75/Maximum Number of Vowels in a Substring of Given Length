##Question

## first iteration
class Solution(object):
    def maxVowels(self, s, k):
        """
        :type s: str
        :type k: int
        :rtype: int
        """
        # Initialize vowels set
        vowels = {"a", "e", "i", "o", "u", "A", "E", "I", "O", "U"}
        maxlen = 0
        count = 0

        # Iterate through the string
        for i in range(len(s) - k + 1):  # Ensure we don't go out of bounds
            count = 0  # Reset count for each window
            for j in range(i, i + k):  # Iterate within the substring of length 'k'
                if s[j] in vowels:  # Check if character is a vowel
                    count += 1
            maxlen = max(count, maxlen)  # Update max vowels count

        return maxlen


## my solution

class Solution:
    def maxVowels(self, s: str, k: int) -> int:
        vowels = {'a','e','i','o','u'}
        curr = 0
        for i in range(k):
            if s[i] in vowels:
                curr += 1
        max_vowels = curr
        for i in range(k, len(s)):
            if s[i] in vowels:
                curr += 1
            if s[i-k] in vowels:
                curr -= 1
            max_vowels = max(max_vowels, curr)
        return max_vowels
